name: Rust

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  CARGO_TERM_COLOR: always
  RUST_TEST_THREADS: 1
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: NONE
            SECURES: ""
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: NONE
            SECURES: secure
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: SNAPPY
            SECURES: ""
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: SNAPPY
            SECURES: secure
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: GZIP
            SECURES: ""
          - KAFKA_VER: 3.4.0
            COMPRESSIONS: GZIP
            SECURES: secure
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: NONE
            SECURES: ""
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: NONE
            SECURES: secure
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: SNAPPY
            SECURES: ""
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: SNAPPY
            SECURES: secure
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: GZIP
            SECURES: ""
          - KAFKA_VER: 3.8.0
            COMPRESSIONS: GZIP
            SECURES: secure
    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER }}" --password-stdin

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Build
      run: cargo build

    - name: Run tests
      run: ./tests/run-all-tests ${{ matrix.KAFKA_VER }}
      env:
        KAFKA_VER: ${{ matrix.KAFKA_VER }}
        COMPRESSIONS: ${{ matrix.COMPRESSIONS }}
        SECURES: ${{ matrix.SECURES }}

    - name: Generate documentation
      run: cargo doc
